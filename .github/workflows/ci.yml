name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        rails-version:
          - "7.1"
          - "6.1"
          - "main"
        ruby-version:
          - "3.1"
          - "3.2"

    env:
      RAILS_ENV: test
      RAILS_VERSION: ${{ matrix.rails-version }}

    name: ${{ format('Test rails@{0} ruby@{1}', matrix.rails-version, matrix.ruby-version) }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake test

  standard:
    runs-on: ubuntu-latest
    name: "Standard"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true
      - name: Run Standard
        run: bundle exec rake standard

  calculate_matrix:
    name: ðŸ§® Calculate Dynamic Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.dynamic-matrix.outputs.matrix }}
      totalRunners: ${{ steps.dynamic-matrix.outputs.totalRunners }}
      testRunnersPerNode: ${{ steps.dynamic-matrix.outputs.testRunnersPerNode }}
    steps:
      - name: Dynamic Matrix
        id: dynamic-matrix
        uses: bullet-train-co/parallel-test-dynamic-matrix@v1
        with:
          numberOfTestNodes: 4

  starter_repo:
    name: Bullet Train Starter Repo Minitest
    runs-on: ubuntu-latest
    needs: calculate_matrix
    strategy:
      fail-fast: false
      matrix:
        parallel_test_groups: ${{ fromJson(needs.calculate_matrix.outputs.matrix) }}
    services:
      postgres:
        image: postgres:11-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      POSTGRES_USER: rails
      POSTGRES_PASSWORD: password
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
      - name: Checkout This Repo
        uses: actions/checkout@v4

      - name: Checkout Starter Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        with:
          target_dir: tmp/starter
          repository: bullet-train-co/bullet_train

      - name: Checkout Core Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        with:
          target_dir: tmp/core
          repository: bullet-train-co/bullet_train-core

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          working-directory: tmp/starter
          bundler-cache: true

      - name: Enable corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version-file: tmp/starter/.nvmrc
          cache: yarn
          cache-dependency-path: tmp/starter/yarn.lock

      - name: Link This Repo (local gem)
        uses: bullet-train-co/link-local-gem@v1
        with:
          application_dir: tmp/starter
          local_gem_dir: .

      - name: Link Core Repo
        uses: bullet-train-co/link-core-gems@v1
        with:
          application_dir: tmp/starter
          core_dir: tmp/core

      - name: Set up database schema
        run: bin/rake parallel:setup[${{ fromJson(needs.calculate_matrix.outputs.testRunnersPerNode) }}]
        working-directory: tmp/starter

      - run: yarn install
        working-directory: tmp/starter
      - run: yarn build
        working-directory: tmp/starter
      - run: yarn build:css
        working-directory: tmp/starter

      - name: Touch Parallel Tests Runtime Log
        run: touch tmp/parallel_runtime_test.log
        working-directory: tmp/starter

      - name: Run tests
        env:
          AUTH_ENDPOINT: https://no-site.nowhere
          AWS_REGION: us-east-1
          PARALLEL_TESTS_RECORD_RUNTIME: true
        run: |
          bundle exec parallel_test test \
          -n ${{ fromJson(needs.calculate_matrix.outputs.totalRunners) }} \
          --only-group ${{ matrix.parallel_test_groups }} \
          --group-by runtime \
          --allowed-missing 100 \
          --verbose \
          --verbose-command
        working-directory: tmp/starter
