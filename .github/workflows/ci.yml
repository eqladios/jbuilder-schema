name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  calculate_matrix:
    name: ðŸ§® Calculate Dynamic Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.dynamic-matrix.outputs.matrix }}
      totalRunners: ${{ steps.dynamic-matrix.outputs.totalRunners }}
      testRunnersPerNode: ${{ steps.dynamic-matrix.outputs.testRunnersPerNode }}
    steps:
      - name: Dynamic Matrix
        id: dynamic-matrix
        uses: bullet-train-co/parallel-test-dynamic-matrix@v1
        with:
          # You can explicitly set the number of test nodes, or it will default to 4
          numberOfTestNodes: 4
          # You can explicitly set the number of runners per node, or it will default
          # to 4 for public repos and 2 for private
          # testRunnersPerNode: 2

  test:
    strategy:
      fail-fast: false
      matrix:
        rails-version:
          - "7.1"
          - "6.1"
          - "main"
        ruby-version:
          - "3.1"
          - "3.2"
        exclude:
        # Rails main requires Ruby 3.2+
        - ruby-version: "3.1"
          rails-version: "main"

    env:
      RAILS_ENV: test
      RAILS_VERSION: ${{ matrix.rails-version }}

    name: ${{ format('Test rails@{0} ruby@{1}', matrix.rails-version, matrix.ruby-version) }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Run tests
        run: bundle exec rake test

  standard:
    runs-on: ubuntu-latest
    name: "Standard"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          bundler-cache: true
      - name: Run Standard
        run: bundle exec rake standard

  starter_repo:
    needs: calculate_matrix
    runs-on: ubuntu-latest
    name: Bullet Train Starter Repo Minitest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate_matrix.outputs.matrix) }}
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
      BUNDLE_JOBS: 2
      BUNDLE_RETRY: 3
    steps:
      - name: Checkout This Repo
        uses: actions/checkout@v4

      - name: Checkout Starter Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        with:
          target_dir: tmp/starter
          repository: bullet-train-co/bullet_train

      - name: Checkout Core Repo
        uses: bullet-train-co/checkout-repo-with-matching-branch@v1
        with:
          target_dir: tmp/core
          repository: bullet-train-co/bullet_train-core

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: tmp/starter
          bundler-cache: true

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: tmp/starter/.nvmrc

      - name: Enable Corepack (Yarn from package.json)
        run: |
          corepack enable
          corepack prepare $(jq -r .packageManager package.json) --activate
          yarn --version
        working-directory: tmp/starter

      - name: Set up Yarn Cache
        uses: actions/setup-node@v4
        with:
          node-version-file: tmp/starter/.nvmrc
          cache: "yarn"
          cache-dependency-path: tmp/starter/yarn.lock

      - name: Allow adding of this gem
        run: bundle config unset deployment
        working-directory: tmp/starter

      - name: Link This Repo
        uses: bullet-train-co/link-local-gem@v1
        with:
          application_dir: tmp/starter
          local_gem_dir: .

      - name: Link Core Repo
        uses: bullet-train-co/link-core-gems@v1
        with:
          application_dir: tmp/starter
          core_dir: tmp/core

      - name: Set up database schema
        run: bin/rails db:schema:load
        working-directory: ./tmp/starter

      - name: Run tests
        id: run-tests
        env:
          AUTH_ENDPOINT: https://no-site.nowhere
          AWS_REGION: us-east-1
          PARALLEL_TESTS_RECORD_RUNTIME: true
        run: |
          bundle exec parallel_test test \
          -n ${{ fromJson(needs.calculate_matrix.outputs.totalRunners) }} \
          --only-group ${{ matrix.parallel_test_groups }} \
          --group-by runtime \
          --allowed-missing 100 \
          --verbose \
          --verbose-command
        working-directory: ./tmp/starter
        shell: bash

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "tmp/starter/test/reports/**/TEST-*.xml"
        if: always()
